#cloud-config
package_update: true
packages:
  - container-tools
  - awscli

write_files:
  - path: /etc/containers/systemd/tfe.yml
    content: |
      apiVersion: "v1"
      kind: "Pod"
      metadata:
        labels:
          app: "terraform-enterprise"
        name: "terraform-enterprise"
      spec:
        restartPolicy: "Never"
        containers:
        - env:
          - name: "TFE_OPERATIONAL_MODE"
            value: "active-active"
          - name: "TFE_LICENSE"
            value: "${tfe_license}"
          - name: "TFE_HOSTNAME"
            value: "${tfe_hostname}"
          - name: "TFE_HTTP_PORT"
            value: "${tfe_http_port}"
          - name: "TFE_HTTPS_PORT"
            value: "${tfe_https_port}"
          - name: "TFE_TLS_CERT_FILE"
            value: "/etc/ssl/private/terraform-enterprise/${bundle}"
          - name: "TFE_TLS_KEY_FILE"
            value: "/etc/ssl/private/terraform-enterprise/${key}"
          - name: "TFE_TLS_CA_BUNDLE_FILE"
            value: "/etc/ssl/private/terraform-enterprise/${bundle}"
          - name: "TFE_DISK_CACHE_VOLUME_NAME"
            value: "terraform-enterprise_terraform-enterprise-cache"
          - name: "TFE_LICENSE_REPORTING_OPT_OUT"
            value: "true"
          - name: "TFE_ENCRYPTION_PASSWORD"
            value: "${tfe_encryption_password}"
          - name: TFE_IACT_TOKEN
            value: "${tfe_iact_token}"            

          # Database settings. See the configuration reference for more settings.
          - name: "TFE_DATABASE_HOST"
            value: "${tfe_database_host}"
          - name: "TFE_DATABASE_NAME"
            value: "${tfe_database_name}"
          - name: "TFE_DATABASE_PARAMETERS"
            value: "sslmode=disable"
          - name: "TFE_DATABASE_PASSWORD"
            value: "${tfe_database_password}"
          - name: "TFE_DATABASE_USER"
            value: "${tfe_database_user}"

          # Object storage settings. See the configuration reference for more settings.
          - name: "TFE_OBJECT_STORAGE_TYPE"
            value: "s3"
          - name: "TFE_OBJECT_STORAGE_S3_USE_INSTANCE_PROFILE"
            value: "true"
          - name: "TFE_OBJECT_STORAGE_S3_BUCKET"
            value: "${tfe_object_storage_bucket_name}"
          - name: "TFE_OBJECT_STORAGE_S3_REGION"
            value: "${aws_region}"  

          #Redis settings
          - name: TFE_REDIS_HOST
            value: "${tfe_redis_host}:6379"
          - name: TFE_REDIS_USE_TLS
            value: "false"

          # Vault cluster settings.
          # If you are using the default internal vault, this should be the private routable IP address of the node itself.
          - name: TFE_VAULT_CLUSTER_ADDRESS
            value: "https://REPLACE_WITH_SED:8201"


          image: "images.releases.hashicorp.com/hashicorp/terraform-enterprise:${tfe_version_image}"
          name: "terraform-enterprise"
          ports:
          - containerPort: ${tfe_http_port}
            hostPort: 80
          - containerPort: ${tfe_https_port}
            hostPort: 443
          - containerPort: 8201
            hostPort: 8201
          - containerPort: 9090
            hostPort: 9090
          securityContext:
            capabilities:
              add:
              - "CAP_IPC_LOCK"
            readOnlyRootFilesystem: true
            seLinuxOptions:
              type: "spc_t"
          volumeMounts:
          - mountPath: "/etc/ssl/private/terraform-enterprise"
            name: "certs"
          - mountPath: "/var/log/terraform-enterprise"
            name: "log"
          - mountPath: "/run"
            name: "run"
          - mountPath: "/tmp"
            name: "tmp"
          - mountPath: "/run/docker.sock"
            name: "docker-sock"
          - mountPath: "/var/cache/tfe-task-worker/terraform"
            name: "terraform-enterprise_terraform-enterprise-cache-pvc"
        volumes:
        - hostPath:
            path: "${tfe_host_path_to_certificates}"
            type: "Directory"
          name: "certs"
        - emptyDir:
            medium: "Memory"
          name: "log"
        - emptyDir:
            medium: "Memory"
          name: "run"
        - emptyDir:
            medium: "Memory"
          name: "tmp"
        - hostPath:
            path: "/var/run/docker.sock"
            type: "File"
          name: "docker-sock"
        - name: "terraform-enterprise_terraform-enterprise-cache-pvc"
          persistentVolumeClaim:
            claimName: "terraform-enterprise_terraform-enterprise-cache"
    
# Quadlet unit file for the Terraform Enterprise pod and container:
  - path: /etc/containers/systemd/terraform-enterprise.kube
    content: |
      [Install]
      WantedBy=default.target
      [Service]
      Restart=always
      [Kube]
      Yaml=tfe.yml
      
runcmd:
#Install and start aws ssm agent
  - dnf install -y https://s3.${aws_region}.amazonaws.com/amazon-ssm-${aws_region}/latest/linux_amd64/amazon-ssm-agent.rpm
  - systemctl enable --now amazon-ssm-agent
# Install AWS CLI for s3 copy operations
  - dnf install awscli -y
# Create necessary directories
  - mkdir -p ${tfe_host_path_to_certificates}
# Enable podman socket
  - systemctl enable --now podman.socket
# copy certificate files from s3
  - aws s3 cp s3://${tfe_shared_bucket_name}/certificate.pem ${tfe_host_path_to_certificates}/certificate.pem
  - aws s3 cp s3://${tfe_shared_bucket_name}/chain.pem ${tfe_host_path_to_certificates}/chain.pem
  - aws s3 cp s3://${tfe_shared_bucket_name}/private.key ${tfe_host_path_to_certificates}/${key}
# Create fullchain.pem, requirement with let's encrypt: https://developer.hashicorp.com/terraform/enterprise/deploy/prepare-host#create-tls-certificates
  - cat ${tfe_host_path_to_certificates}/certificate.pem > ${tfe_host_path_to_certificates}/fullchain.pem
  - cat ${tfe_host_path_to_certificates}/chain.pem >> ${tfe_host_path_to_certificates}/fullchain.pem
# Set permissions for certificate files
  - chmod 0644 ${tfe_host_path_to_certificates}/${key}
  - chmod 0644 ${tfe_host_path_to_certificates}/${bundle}
# Log in to Terraform Enterprise container image registry and pull the image
  - echo "${tfe_license}" | podman login --username terraform images.releases.hashicorp.com --password-stdin
  - podman pull images.releases.hashicorp.com/hashicorp/terraform-enterprise:${tfe_version_image}
# Update the local IP address in the tfe.yml
  - MYLOCALIP=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
  - sed -i 's/REPLACE_WITH_SED/'$MYLOCALIP'/g' /etc/containers/systemd/tfe.yml
# Reload systemd daemon and start the Terraform Enterprise service
  - systemctl daemon-reload
  - sleep 10
  - systemctl start terraform-enterprise.service
